spring:
  datasource:
    url: jdbc:h2:mem:notificationdb
    driver-class-name: org.h2.Driver
    username: ${db.username:username}
    password: ${db.password:password}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  h2:
    console:
      enabled: true

  cloud:
    function:
      definition: busConsumer
    stream:
      default-binder: rabbit
      bindings:
        notification-in-0:             # consumer -> ascultă mesaje
          destination: orders
          group: notification-group
          content-type: application/json
          consumer:
            autoStartup: true          # binding-ul pornește automat
      rabbit:
        bindings:
          notification-in-0:
            consumer:
              declareExchange: true    # se asigură că există exchange-ul
              bindQueue: true          # leagă coada la exchange
              declareQueue: true       # creează coada dacă nu există
              autoBindDlq: true        # opțional: declară și dead-letter queue

custom:
  message: "Welcome to the Notification Service!"
